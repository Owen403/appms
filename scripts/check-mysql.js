const mysql = require("mysql2/promise");

async function checkMySQLStatus() {
	console.log("üîç ƒêang ki·ªÉm tra tr·∫°ng th√°i MySQL...");

	// Ki·ªÉm tra c√°c c·ªïng MySQL ph·ªï bi·∫øn
	const ports = [3306, 3307, 3308];

	for (const port of ports) {
		try {
			console.log(`\nüì° Th·ª≠ k·∫øt n·ªëi MySQL t·∫°i localhost:${port}...`);

			const connection = await mysql.createConnection({
				host: "localhost",
				port: port,
				user: "root",
				password: "1234",
				connectTimeout: 5000,
			});

			console.log(`‚úÖ K·∫øt n·ªëi th√†nh c√¥ng t·∫°i port ${port}!`);

			// L·∫•y phi√™n b·∫£n MySQL
			const [rows] = await connection.execute("SELECT VERSION() as version");
			console.log(`üìã MySQL Version: ${rows[0].version}`);

			// Li·ªát k√™ databases
			const [dbs] = await connection.execute("SHOW DATABASES");
			console.log("üìä Databases c√≥ s·∫µn:");
			dbs.forEach((db) => console.log(`   - ${db.Database}`));

			await connection.end();

			// C·∫≠p nh·∫≠t c·∫•u h√¨nh n·∫øu port kh√°c 3306
			if (port !== 3306) {
				console.log(`\nüí° MySQL ƒëang ch·∫°y tr√™n port ${port}, kh√¥ng ph·∫£i 3306 m·∫∑c ƒë·ªãnh.`);
				console.log(`C·∫ßn c·∫≠p nh·∫≠t config/database.js ƒë·ªÉ s·ª≠ d·ª•ng port ${port}`);
			}

			return port;
		} catch (error) {
			console.log(`‚ùå Kh√¥ng th·ªÉ k·∫øt n·ªëi t·∫°i port ${port}: ${error.code}`);
		}
	}

	console.log("\n‚ùå Kh√¥ng t√¨m th·∫•y MySQL server ƒëang ch·∫°y!");
	console.log("\nüìù H∆∞·ªõng d·∫´n kh·∫Øc ph·ª•c:");
	console.log("");
	console.log("ü™ü WINDOWS:");
	console.log("1. Kh·ªüi ƒë·ªông MySQL t·ª´ Services:");
	console.log('   - Nh·∫•n Win + R, g√µ "services.msc"');
	console.log('   - T√¨m "MySQL80" ho·∫∑c "MySQL" v√† Start');
	console.log("");
	console.log("2. Ho·∫∑c t·ª´ Command Prompt (ch·∫°y v·ªõi quy·ªÅn Admin):");
	console.log("   net start mysql80");
	console.log("   # ho·∫∑c net start mysql");
	console.log("");
	console.log("3. N·∫øu d√πng XAMPP:");
	console.log("   - M·ªü XAMPP Control Panel");
	console.log('   - Nh·∫•n "Start" b√™n c·∫°nh MySQL');
	console.log("");
	console.log("4. N·∫øu d√πng WAMP:");
	console.log("   - Kh·ªüi ƒë·ªông WAMP Server");
	console.log("   - ƒê·∫£m b·∫£o MySQL service running");
	console.log("");
	console.log("üêß LINUX/WSL:");
	console.log("sudo service mysql start");
	console.log("# ho·∫∑c");
	console.log("sudo systemctl start mysql");
	console.log("");
	console.log("üçé MACOS:");
	console.log("sudo /usr/local/mysql/support-files/mysql.server start");
	console.log("# ho·∫∑c n·∫øu d√πng Homebrew:");
	console.log("brew services start mysql");
	console.log("");
	console.log("üì¶ N·∫øu ch∆∞a c√†i MySQL:");
	console.log("- Windows: T·∫£i t·ª´ https://dev.mysql.com/downloads/mysql/");
	console.log("- XAMPP/WAMP: ƒê√£ bao g·ªìm MySQL");
	console.log("- Linux: sudo apt install mysql-server");
	console.log("- macOS: brew install mysql");

	return null;
}

// Ch·∫°y ki·ªÉm tra
checkMySQLStatus()
	.then((port) => {
		if (port) {
			console.log(`\nüéâ MySQL ƒë√£ s·∫µn s√†ng t·∫°i port ${port}! B·∫°n c√≥ th·ªÉ ch·∫°y server b√¢y gi·ªù.`);
			process.exit(0);
		} else {
			process.exit(1);
		}
	})
	.catch((error) => {
		console.error("‚ùå L·ªói ki·ªÉm tra MySQL:", error.message);
		process.exit(1);
	});
